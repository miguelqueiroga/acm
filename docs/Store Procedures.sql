DELIMITER //

DROP FUNCTION IF EXISTS CONVERTERVARCHAREMDECIMAL//

CREATE FUNCTION CONVERTERVARCHAREMDECIMAL (VALOR VARCHAR(15)) RETURNS DECIMAL(10,2)
BEGIN
  RETURN CONVERT(
               REPLACE (
                       REPLACE (
                               VALOR, ".", ""
                       ), ",", "."
               ), DECIMAL(10,2)
         );
END//


# DESPESAS POR SOCIA

DROP FUNCTION IF EXISTS GETDESPESASDIRETASPORVENCIMENTOESOCIA//

CREATE FUNCTION GETDESPESASDIRETASPORVENCIMENTOESOCIA (VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT SUM(
                    ROUND((
                          IF(CONVERTERVARCHAREMDECIMAL(DPV.DPV_VALOR) IS NULL, 0, CONVERTERVARCHAREMDECIMAL(DPV.DPV_VALOR))
                          *
                          (CONVERTERVARCHAREMDECIMAL(DS.DS_PORCENTAGEM) / 100)
                    ), 2)
                )
         FROM DESPESA_POR_VENCIMENTO DPV JOIN VENCIMENTO V ON DPV.DPV_VENCIMENTO = V.VEN_ID, DEPARTAMENTO DEP, DESPESA DES, SOCIO SOC, DEPARTAMENTO_SOCIO DS
         WHERE V.VEN_NOME LIKE VENCIMENTO AND DES.DES_ID = DPV.DPV_DESPESA
               AND DES.DES_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_SOCIO = SOC.SOC_ID
               AND SOC.SOC_ID= SOCIA);
END// 

DROP FUNCTION IF EXISTS GETDESPESASINDIRETASPORVENCIMENTOESOCIA//

CREATE FUNCTION GETDESPESASINDIRETASPORVENCIMENTOESOCIA (VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT SUM(
                    ROUND((
                          IF(CONVERTERVARCHAREMDECIMAL(DPV.DPV_VALOR) IS NULL, 0, CONVERTERVARCHAREMDECIMAL(DPV.DPV_VALOR))
                          *
                          (CONVERTERVARCHAREMDECIMAL(DS.DS_PORCENTAGEM) / 100)
                          *
                          (CONVERTERVARCHAREMDECIMAL(DD.DD_PORCENTAGEM) / 100)
                    ), 2)
                )
         FROM DESPESA_POR_VENCIMENTO DPV JOIN VENCIMENTO V ON DPV.DPV_VENCIMENTO = V.VEN_ID, DEPARTAMENTO DEP, DESPESA DES, SOCIO SOC, DEPARTAMENTO_SOCIO DS, DEPARTAMENTO_DEPARTAMENTO DD
         WHERE V.VEN_NOME LIKE VENCIMENTO AND DES.DES_ID = DPV.DPV_DESPESA
               AND DES.DES_DEPARTAMENTO = DEP.DEP_ID AND DD.DD_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_DEPARTAMENTO = DD.DD_DEPARTAMENTO_DONO
               AND DS.DS_SOCIO = SOC.SOC_ID AND SOC.SOC_ID= SOCIA);
END//

DROP FUNCTION IF EXISTS GETDESPESASPORANOESOCIA//

CREATE FUNCTION GETDESPESASPORANOESOCIA (ANO VARCHAR(4), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN GETDESPESASDIRETASPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA) + GETDESPESASINDIRETASPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA);
END//


# RECEITAS POR SOCIA

DROP FUNCTION IF EXISTS GETVALORLIQUIDORECEITA//

CREATE FUNCTION GETVALORLIQUIDORECEITA (RECEITA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
    RETURN (SELECT  CONVERTERVARCHAREMDECIMAL(REC.REC_VALOR_BRUTO)
                    -
                    (
                      (
                            CONVERTERVARCHAREMDECIMAL(RPC.RPC_INSS_TOTAL)
                            +
                            CONVERTERVARCHAREMDECIMAL(RPC.RPC_IR_TOTAL)
                            +
                            CONVERTERVARCHAREMDECIMAL(RPC.RPC_PAGAMENTO_PARTICULAR)
                            +
                            CONVERTERVARCHAREMDECIMAL(RPC.RPC_OUTRAS_DESPESAS)
                      )
                      *
                      (REC.REC_QUANTIDADE_EXAMES / RPC.RPC_QUANTIDADE_EXAMES_TOTAL)
                    )
            FROM RECEITA REC JOIN RECEITA_POR_CONVENIO RPC ON REC.REC_RECEITA_POR_CONVENIO = RPC.RPC_ID
            WHERE REC.REC_ID = RECEITA
           );
END//


DROP FUNCTION IF EXISTS GETRECEITASDIRETASPORVENCIMENTOESOCIA//

CREATE FUNCTION GETRECEITASDIRETASPORVENCIMENTOESOCIA (VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT SUM(
                    ROUND((
                          IF(GETVALORLIQUIDORECEITA(REC.REC_ID) IS NULL, 0, GETVALORLIQUIDORECEITA(REC.REC_ID))
                          *
                          (
                                 CONVERTERVARCHAREMDECIMAL(DS.DS_PORCENTAGEM) / 100
                          )
                    ), 2)
                )
         FROM RECEITA_POR_CONVENIO RPC JOIN VENCIMENTO V ON RPC.RPC_VENCIMENTO = V.VEN_ID, DEPARTAMENTO DEP, RECEITA REC, SOCIO SOC, DEPARTAMENTO_SOCIO DS
         WHERE V.VEN_NOME LIKE VENCIMENTO AND REC.REC_RECEITA_POR_CONVENIO = RPC.RPC_ID
               AND REC.REC_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_SOCIO = SOC.SOC_ID
               AND SOC.SOC_ID = SOCIA);
END//

DROP FUNCTION IF EXISTS GETRECEITASINDIRETASPORVENCIMENTOESOCIA//

CREATE FUNCTION GETRECEITASINDIRETASPORVENCIMENTOESOCIA (VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT SUM(
                    ROUND((
                          IF(GETVALORLIQUIDORECEITA(REC.REC_ID) IS NULL, 0, GETVALORLIQUIDORECEITA(REC.REC_ID))
                          *
                          (CONVERTERVARCHAREMDECIMAL(DS.DS_PORCENTAGEM) / 100)
                          *
                          (CONVERTERVARCHAREMDECIMAL(DD.DD_PORCENTAGEM) / 100)
                    ), 2)
                )
         FROM RECEITA_POR_CONVENIO RPC JOIN VENCIMENTO V ON RPC.RPC_VENCIMENTO = V.VEN_ID, DEPARTAMENTO DEP, RECEITA REC, SOCIO SOC, DEPARTAMENTO_SOCIO DS, DEPARTAMENTO_DEPARTAMENTO DD
         WHERE V.VEN_NOME LIKE VENCIMENTO AND REC.REC_RECEITA_POR_CONVENIO = RPC.RPC_ID AND DS.DS_DEPARTAMENTO = DD.DD_DEPARTAMENTO_DONO
               AND REC.REC_DEPARTAMENTO = DEP.DEP_ID AND DD.DD_DEPARTAMENTO = DEP.DEP_ID AND DS.DS_SOCIO = SOC.SOC_ID
               AND SOC.SOC_ID = SOCIA);
END//

DROP FUNCTION IF EXISTS GETRECEITASPORANOESOCIA//

CREATE FUNCTION GETRECEITASPORANOESOCIA (ANO VARCHAR(4), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN GETRECEITASDIRETASPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA) + GETRECEITASINDIRETASPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA);
END//

# RETIRADAS POR SOCIA

DROP FUNCTION IF EXISTS GETRETIRADASPORVENCIMENTOESOCIA//

CREATE FUNCTION GETRETIRADASPORVENCIMENTOESOCIA(VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT IF(SUM(CONVERTERVARCHAREMDECIMAL(RET.RET_VALOR)) IS NULL, 0, SUM(CONVERTERVARCHAREMDECIMAL(RET.RET_VALOR)))
          FROM RETIRADA RET JOIN VENCIMENTO VEN ON RET.RET_VENCIMENTO = VEN.VEN_ID, SOCIO SOC
          WHERE VEN.VEN_NOME LIKE VENCIMENTO AND RET.RET_SOCIO = SOC.SOC_ID AND SOCIA = SOC.SOC_ID);
END//

DROP FUNCTION IF EXISTS GETRETIRADASPORANOESOCIA//

CREATE FUNCTION GETRETIRADASPORANOESOCIA (ANO VARCHAR(4), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN GETRETIRADASPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA);
END//


# APLICACOES POR SOCIA

DROP FUNCTION IF EXISTS GETAPLICACOESPORVENCIMENTOESOCIA//

CREATE FUNCTION GETAPLICACOESPORVENCIMENTOESOCIA(VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN (SELECT IF(SUM(CONVERTERVARCHAREMDECIMAL(APL.APL_VALOR)) IS NULL, 0, SUM(CONVERTERVARCHAREMDECIMAL(APL.APL_VALOR)))
          FROM APLICACAO APL JOIN VENCIMENTO VEN ON APL.APL_VENCIMENTO = VEN.VEN_ID, SOCIO SOC
          WHERE VEN.VEN_NOME LIKE VENCIMENTO AND APL.APL_SOCIO = SOC.SOC_ID AND SOCIA = SOC.SOC_ID);
END//

DROP FUNCTION IF EXISTS GETAPLICACOESPORANOESOCIA//

CREATE FUNCTION GETAPLICACOESPORANOESOCIA (ANO VARCHAR(4), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN GETAPLICACOESPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA);
END//


# DINHEIRO RECEBIDO EM CONTA POR SOCIA

DROP FUNCTION IF EXISTS GETDINHEIRORECEBIDOEMCONTAPORVENCIMENTOESOCIA//

CREATE FUNCTION GETDINHEIRORECEBIDOEMCONTAPORVENCIMENTOESOCIA(VENCIMENTO VARCHAR(7), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  # TODO
  RETURN (SELECT SUM(
                    IF(GETVALORLIQUIDORECEITA(REC.REC_ID) IS NULL, 0, GETVALORLIQUIDORECEITA(REC.REC_ID))
                 )
         FROM RECEITA_POR_CONVENIO RPC JOIN VENCIMENTO V ON RPC.RPC_VENCIMENTO = V.VEN_ID, CONVENIO CON, CONTA_PAGAMENTO CP, RECEITA REC, SOCIO SOC
         WHERE V.VEN_NOME LIKE VENCIMENTO AND REC.REC_RECEITA_POR_CONVENIO = RPC.RPC_ID
               AND RPC.RPC_CONVENIO = CON.CON_ID AND CON.CON_CONTA_PAGAMENTO = CP.CP_ID AND CP.CP_SOCIO = SOC.SOC_ID
               AND SOC.SOC_ID = SOCIA);
END//

DROP FUNCTION IF EXISTS GETDINHEIRORECEBIDOEMCONTAPORANOESOCIA//

CREATE FUNCTION GETDINHEIRORECEBIDOEMCONTAPORANOESOCIA (ANO VARCHAR(4), SOCIA INTEGER) RETURNS DECIMAL(10,2)
BEGIN
  RETURN GETDINHEIRORECEBIDOEMCONTAPORVENCIMENTOESOCIA(CONCAT(ANO, '___'), SOCIA);
END//


# RELATORIOS GERENCIAIS

DROP PROCEDURE IF EXISTS GETRESULTADOTODOSANOS//

CREATE PROCEDURE GETRESULTADOTODOSANOS (SOCIA INTEGER)
BEGIN
      (SELECT GETRECEITASPORANOESOCIA(SUBSTRING(VEN.VEN_NOME, 1, 4), SOCIA) AS RECEITAS,
              GETDESPESASPORANOESOCIA(SUBSTRING(VEN.VEN_NOME, 1, 4), SOCIA) AS DESPESAS,
              GETRETIRADASPORANOESOCIA(SUBSTRING(VEN.VEN_NOME, 1, 4), SOCIA) AS RETIRADAS,
              GETAPLICACOESPORANOESOCIA(SUBSTRING(VEN.VEN_NOME, 1, 4), SOCIA) AS APLICACOES,
              GETDINHEIRORECEBIDOEMCONTAPORANOESOCIA(SUBSTRING(VEN.VEN_NOME, 1, 4), SOCIA) AS DINHEIRORECEBIDOEMCONTA,
              SUBSTRING(VEN.VEN_NOME, 1, 4) AS ANO
       FROM VENCIMENTO VEN
       WHERE VEN.VEN_NOME LIKE '____/01'
  );
END//

DELIMITER ;
